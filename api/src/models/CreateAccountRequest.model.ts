// This file is auto-generated by ModelGun code generator.
// https://github.com/ku6ryo/ModelGun
// PLEASE DO NOT EDIT. If you want to extend the functionality, please import
// the export members and use as a part or inherit class.

import isEmail from "validator/lib/isEmail"

export class UnexpectedNullError extends Error {
  constructor () {
    super("CreateAccountRequest UnexpectedNullError: If you see this, generated code by modelgun may be broken.")
  }
}

export class InvalidPropertyError extends Error {
  constructor (message: string) {
    super("CreateAccountRequest InvalidPropertyError: " + message)
  }
}

/**
 * CreateAccountRequest model.
 * Request to create account
 */
export default class CreateAccountRequest {
  #type: number | null = null
  #email: string | null = null

  /**
   * @param number type 
   * @param string email 
   */
  constructor (
    type: number,
    email: string,
  ) {
    this.setType(type)
    this.setEmail(email)
  }

  /**
   * Gets type
   */
  getType (): number {
    if (this.#type === null) {
      throw new UnexpectedNullError()
    }
    return this.#type
  }

  /**
   * Checks type
   */
  checkType (value: number) {
    if (![0, 1, 2, ].includes(value)) {
      throw new InvalidPropertyError(`${value} is not of candidates. (CreateAccountRequest.setType)`)
    }
    if (value % 1 !== 0) {
      throw new InvalidPropertyError(`${value} is not an integer. (CreateAccountRequest.setType)`)
    }
  }

  /**
   * Sets type
   * @param value
   */
  setType (value: number) {
    this.checkType(value)
    this.#type = value
  }

  /**
   * Gets email
   */
  getEmail (): string {
    if (this.#email === null) {
      throw new UnexpectedNullError()
    }
    return this.#email
  }

  /**
   * Checks email
   */
  checkEmail (value: string) {
    if (!isEmail(value)) {
      throw new InvalidPropertyError(`${value} is not Email value. (CreateAccountRequest.setEmail)`)
    }
  }

  /**
   * Sets email
   * @param value
   */
  setEmail (value: string) {
    this.checkEmail(value)
    this.#email = value
  }

  /**
   * Clones 
   */
  clone (shallow: boolean) {
    return new CreateAccountRequest (
      this.getType(),
      this.getEmail(),
    )
  }

  /**
   * Creates an object.
   */
  toObject () {
    return {
      type: this.getType(),
      email: this.getEmail(),
    }
  }
}
