// This file is generated by model file generator.
// Please do NOT edit.

import isUuid from "validator/es/lib/isUuid"
import {
  UnexpectedNullError,
  InvalidPropertyError,
} from "./errors"

export default class Course {
  #id: string | null = null
  #displayId: string | null = null
  #category: number | null = null
  #name: string | null = null
  #hasExam: boolean | null = null

  constructor (
    id: string,
    displayId: string,
    category: number,
    name: string,
    hasExam: boolean,
  ) {
    this.setId(id)
    this.setDisplayId(displayId)
    this.setCategory(category)
    this.setName(name)
    this.setHasExam(hasExam)
  }

  getId (): string {
    if (this.#id === null) {
      throw new UnexpectedNullError()
    }
    return this.#id
  }

  setId (value: string) {
    if (!isUuid(value)) {
      throw new InvalidPropertyError()
    }
    this.#id = value
  }

  getDisplayId (): string {
    if (this.#displayId === null) {
      throw new UnexpectedNullError()
    }
    return this.#displayId
  }

  setDisplayId (value: string) {
    this.#displayId = value
  }

  getCategory (): number {
    if (this.#category === null) {
      throw new UnexpectedNullError()
    }
    return this.#category
  }

  setCategory (value: number) {
    this.#category = value
  }

  getName (): string {
    if (this.#name === null) {
      throw new UnexpectedNullError()
    }
    return this.#name
  }

  setName (value: string) {
    if (value.length < 1) {
      throw new InvalidPropertyError()
    }
    if (value.length > 256) {
      throw new InvalidPropertyError()
    }
    this.#name = value
  }

  getHasExam (): boolean {
    if (this.#hasExam === null) {
      throw new UnexpectedNullError()
    }
    return this.#hasExam
  }

  setHasExam (value: boolean) {
    this.#hasExam = value
  }
}
