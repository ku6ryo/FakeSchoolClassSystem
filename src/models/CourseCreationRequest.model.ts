// This file is auto-generated by ModelGun code generator.
// https://github.com/ku6ryo/ModelGun
// PLEASE DO NOT EDIT. If you want to extend the functionality, please import
// the export members and use as a part or inherit class.


export class UnexpectedNullError extends Error {
  constructor () {
    super("CourseCreationRequest UnexpectedNullError: If you see this, generated code by modelgun may be broken.")
  }
}

export class InvalidPropertyError extends Error {
  constructor (message: string) {
    super("CourseCreationRequest InvalidPropertyError: " + message)
  }
}

/**
 * CourseCreationRequest model.
 * Course 
 */
export default class CourseCreationRequest {
  #displayId: string | null = null
  #category: number | null = null
  #name: string | null = null
  #description: string | null = null
  #credits: number | null = null

  /**
   * @param string displayId 
   * @param number category 
   * @param string name 
   * @param string description 
   * @param number credits 
   */
  constructor (
    displayId: string,
    category: number,
    name: string,
    description: string,
    credits: number,
  ) {
    this.setDisplayId(displayId)
    this.setCategory(category)
    this.setName(name)
    this.setDescription(description)
    this.setCredits(credits)
  }

  /**
   * Gets displayId
   */
  getDisplayId (): string {
    if (this.#displayId === null) {
      throw new UnexpectedNullError()
    }
    return this.#displayId
  }

  /**
   * Checks displayId
   */
  checkDisplayId (value: string) {
  }

  /**
   * Sets displayId
   * @param value
   */
  setDisplayId (value: string) {
    this.checkDisplayId(value)
    this.#displayId = value
  }

  /**
   * Gets category
   */
  getCategory (): number {
    if (this.#category === null) {
      throw new UnexpectedNullError()
    }
    return this.#category
  }

  /**
   * Checks category
   */
  checkCategory (value: number) {
    if (value > 256) {
      throw new InvalidPropertyError(`${value} is more than 256. (CourseCreationRequest.setCategory)`)
    }
    if (value % 1 !== 0) {
      throw new InvalidPropertyError(`${value} is not an integer. (CourseCreationRequest.setCategory)`)
    }
  }

  /**
   * Sets category
   * @param value
   */
  setCategory (value: number) {
    this.checkCategory(value)
    this.#category = value
  }

  /**
   * Gets name
   */
  getName (): string {
    if (this.#name === null) {
      throw new UnexpectedNullError()
    }
    return this.#name
  }

  /**
   * Checks name
   */
  checkName (value: string) {
    if (value.length < 1) {
      throw new InvalidPropertyError(`${value} is shorter than 1. (CourseCreationRequest.setName)`)
    }
    if (value.length > 256) {
      throw new InvalidPropertyError(`${value} is longer than 256. (CourseCreationRequest.setName)`)
    }
  }

  /**
   * Sets name
   * @param value
   */
  setName (value: string) {
    this.checkName(value)
    this.#name = value
  }

  /**
   * Gets description
   */
  getDescription (): string {
    if (this.#description === null) {
      throw new UnexpectedNullError()
    }
    return this.#description
  }

  /**
   * Checks description
   */
  checkDescription (value: string) {
    if (value.length < 1) {
      throw new InvalidPropertyError(`${value} is shorter than 1. (CourseCreationRequest.setDescription)`)
    }
    if (value.length > 1000) {
      throw new InvalidPropertyError(`${value} is longer than 1000. (CourseCreationRequest.setDescription)`)
    }
  }

  /**
   * Sets description
   * @param value
   */
  setDescription (value: string) {
    this.checkDescription(value)
    this.#description = value
  }

  /**
   * Gets credits
   */
  getCredits (): number {
    if (this.#credits === null) {
      throw new UnexpectedNullError()
    }
    return this.#credits
  }

  /**
   * Checks credits
   */
  checkCredits (value: number) {
    if (value > 50) {
      throw new InvalidPropertyError(`${value} is more than 50. (CourseCreationRequest.setCredits)`)
    }
    if (value % 1 !== 0) {
      throw new InvalidPropertyError(`${value} is not an integer. (CourseCreationRequest.setCredits)`)
    }
  }

  /**
   * Sets credits
   * @param value
   */
  setCredits (value: number) {
    this.checkCredits(value)
    this.#credits = value
  }

  /**
   * Clones 
   */
  clone (shallow: boolean) {
    return new CourseCreationRequest (
      this.getDisplayId(),
      this.getCategory(),
      this.getName(),
      this.getDescription(),
      this.getCredits(),
    )
  }

  /**
   * Creates an object.
   */
  toObject () {
    return {
      displayId: this.getDisplayId(),
      category: this.getCategory(),
      name: this.getName(),
      description: this.getDescription(),
      credits: this.getCredits(),
    }
  }
}
