// This file is auto-generated by ModelGun code generator.
// https://github.com/ku6ryo/ModelGun
// PLEASE DO NOT EDIT. If you want to extend the functionality, please import
// the export members and use as a part or inherit class.

import isUUID from "validator/lib/isUUID"

export class UnexpectedNullError extends Error {
  constructor () {
    super("Student UnexpectedNullError: If you see this, generated code by modelgun may be broken.")
  }
}

export class InvalidPropertyError extends Error {
  constructor (message: string) {
    super("Student InvalidPropertyError: " + message)
  }
}

/**
 * Student model.
 * Student model
 */
export default class Student {
  #id: string | null = null
  #accountId: string | null = null
  #studentNumber: number | null = null
  #credits: number | null = null

  /**
   * @param string id 
   * @param string accountId 
   * @param number studentNumber 
   * @param number credits 
   */
  constructor (
    id: string,
    accountId: string,
    studentNumber: number,
    credits: number,
  ) {
    this.setId(id)
    this.setAccountId(accountId)
    this.setStudentNumber(studentNumber)
    this.setCredits(credits)
  }

  /**
   * Gets id
   */
  getId (): string {
    if (this.#id === null) {
      throw new UnexpectedNullError()
    }
    return this.#id
  }

  /**
   * Checks id
   */
  checkId (value: string) {
    if (!isUUID(value)) {
      throw new InvalidPropertyError(`${value} is not UUID value. (Student.setId)`)
    }
  }

  /**
   * Sets id
   * @param value
   */
  setId (value: string) {
    this.checkId(value)
    this.#id = value
  }

  /**
   * Gets accountId
   */
  getAccountId (): string {
    if (this.#accountId === null) {
      throw new UnexpectedNullError()
    }
    return this.#accountId
  }

  /**
   * Checks accountId
   */
  checkAccountId (value: string) {
  }

  /**
   * Sets accountId
   * @param value
   */
  setAccountId (value: string) {
    this.checkAccountId(value)
    this.#accountId = value
  }

  /**
   * Gets studentNumber
   */
  getStudentNumber (): number {
    if (this.#studentNumber === null) {
      throw new UnexpectedNullError()
    }
    return this.#studentNumber
  }

  /**
   * Checks studentNumber
   */
  checkStudentNumber (value: number) {
    if (value % 1 !== 0) {
      throw new InvalidPropertyError(`${value} is not an integer. (Student.setStudentNumber)`)
    }
  }

  /**
   * Sets studentNumber
   * @param value
   */
  setStudentNumber (value: number) {
    this.checkStudentNumber(value)
    this.#studentNumber = value
  }

  /**
   * Gets credits
   */
  getCredits (): number {
    if (this.#credits === null) {
      throw new UnexpectedNullError()
    }
    return this.#credits
  }

  /**
   * Checks credits
   */
  checkCredits (value: number) {
    if (value > 1000) {
      throw new InvalidPropertyError(`${value} is more than 1000. (Student.setCredits)`)
    }
  }

  /**
   * Sets credits
   * @param value
   */
  setCredits (value: number) {
    this.checkCredits(value)
    this.#credits = value
  }

  /**
   * Clones 
   */
  clone (shallow: boolean) {
    return new Student (
      this.getId(),
      this.getAccountId(),
      this.getStudentNumber(),
      this.getCredits(),
    )
  }

  /**
   * Creates an object.
   */
  toObject () {
    return {
      id: this.getId(),
      accountId: this.getAccountId(),
      studentNumber: this.getStudentNumber(),
      credits: this.getCredits(),
    }
  }
}
